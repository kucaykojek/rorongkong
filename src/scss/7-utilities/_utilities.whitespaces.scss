// ====================
// whitespaces utilities
// ====================

// Here we set a variable assuming that default and module settings
// are not set globally. If they have been previously been defined,
// the following variable will be overriden and will be set to `true`.
$imported-core-settings: false !default;

@if ($imported-core-settings == false) {
  @warn 'Oops! Have you included core settings file?';
}

// use these utility classes to add space between regions;
.#{$global-utility-namespace} {

  &margin-auto {
    margin: auto;
  }

  @for $idx from 0 through $global-spacing-levels {
    &margin--#{$idx} {
      @include margin($idx, null, '!important');
    }

    &margin-v--#{$idx} {
      @include margin($idx, 'top', '!important');
      @include margin($idx, 'bottom', '!important');
    }

    &margin-h--#{$idx} {
      @include margin($idx, 'left', '!important');
      @include margin($idx, 'right', '!important');
    }

    &margin-h-rev--#{$idx} {
      @include margin(-$idx, 'left', '!important');
      @include margin(-$idx, 'right', '!important');
    }

    &margin-top--#{$idx} {
      @include margin($idx, 'top', '!important');
    }

    &margin-bottom--#{$idx} {
      @include margin($idx, 'bottom', '!important');
    }

    &margin-left--#{$idx} {
      @include margin($idx, 'left', '!important');
    }

    &margin-right--#{$idx} {
      @include margin($idx, 'right', '!important');
    }

    &padding--#{$idx} {
      @include padding($idx, null, '!important');
    }

    &padding-v--#{$idx} {
      @include padding($idx, 'top', '!important');
      @include padding($idx, 'bottom', '!important');
    }

    &padding-h--#{$idx} {
      @include padding($idx, 'left', '!important');
      @include padding($idx, 'right', '!important');
    }

    &padding-top--#{$idx} {
      @include padding($idx, 'top', '!important');
    }

    &padding-bottom--#{$idx} {
      @include padding($idx, 'bottom', '!important');
    }

    &padding-left--#{$idx} {
      @include padding($idx, 'left', '!important');
    }

    &padding-right--#{$idx} {
      @include padding($idx, 'right', '!important');
    }
  }
}


//
// Utility classes to put specific spacing values onto elements. The below loop
// will generate us a suite of classes like:
//
//   .u-margin-top {}
//   .u-padding-left--large {}
//   .u-margin-right--small {}
//   .u-padding {}
//   .u-padding-right--none {}
//   .u-padding-h {}
//   .u-padding-h--none {}
//   .u-padding-v--small {}
//

$spacing-directions: (
  null: null,
  '-top': '-top',
  '-right': '-right',
  '-bottom': '-bottom',
  '-left': '-left',
  '-h': '-left' '-right',
  '-v': '-top' '-bottom',
) !default;

$spacing-properties: (
  'padding': 'padding',
  'margin': 'margin',
) !default;

$spacing-sizes: (
  null: $global-spacing-unit,
  '--micro': $global-spacing-unit--micro,
  '--tiny': $global-spacing-unit--tiny,
  '--small': $global-spacing-unit--small,
  '--medium': $global-spacing-unit--medium,
  '--large': $global-spacing-unit--large,
  '--huge': $global-spacing-unit--huge,
  '--none': 0
) !default;

@each $property-namespace, $property in $spacing-properties {

  @each $direction-namespace, $direction-rules in $spacing-directions {

    @each $size-namespace, $size in $spacing-sizes {

      .u-#{$property-namespace}#{$direction-namespace}#{$size-namespace} {

        @each $direction in $direction-rules {
          #{$property}#{$direction}: rem-calc($size) !important;
        }

      }

    }

  }

}
